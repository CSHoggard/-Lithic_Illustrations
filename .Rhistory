plot(mesh)
## Upload the Meuse data
data(MeuseData)
## Create a triangulation on the convex hull of these data,
## where each data location is a triangle vertex
mesh <- create.MESH.2D(nodes = MeuseData[,c(2,3)], order = 1)
## Plot the mesh
plot(mesh)
## Upload a domain boundary for these data
data(MeuseBorder)
## Create a constrained Delaunay triangulation with the provided boundary
## where each datalocation is a triangle vertex
mesh <- create.MESH.2D(nodes = MeuseData[,c(2,3)], segments = MeuseBorder, order = 1)
## Plot the mesh
plot(mesh)
## Upload a triangular mesh and plot it
data("mesh.2D.rectangular")
plot(mesh.2D.rectangular)
## Create a linear Finite Element basis
FEMbasis = create.FEM.basis(mesh.2D.rectangular)
## Define a sinusoidal function as expansion of this basis and plot it
coeff <- sin(mesh.2D.rectangular$nodes[,1])*cos(mesh.2D.rectangular$nodes[,2])
FEM_object<- FEM(coeff, FEMbasis)
plot(FEM_object)
## Upload a triangular mesh and plot it
data("mesh.2D.rectangular")
plot(mesh.2D.rectangular)
## Create a linear Finite Element basis
FEMbasis = create.FEM.basis(mesh.2D.rectangular)
## Define a sinusoidal function as expansion of this basis and plot it
coeff <- sin(mesh.2D.rectangular$nodes[,1])*cos(mesh.2D.rectangular$nodes[,2])
FEM_object<- FEM(coeff, FEMbasis)
plot(FEM_object)
library(ggplot2)
library(dplyr)
#a hopalong attractor
#ggplot theme blank canvas
opt = theme(legend.position  = "none",
panel.background = element_rect(fill="white"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
#attractor function
createTrajectory <- function(n, x0, y0, a, b, c) {
#pre-initialize vectors of length n
x <- vector(mode = "numeric", length = n)
y <- vector(mode = "numeric", length = n)
#starting values
x[1] <- x0
y[1] <- y0
#fill vectors with values
for(i in 2:n) {
x[i] <- y[i-1]-1-sqrt(abs(b*x[i-1]-c))*sign(x[i-1]-1)
y[i] <- a-x[i-1]-1
}
#make dataframe
data.frame(x = x, y = y)
}
#constants
a=2
b=1
c=8
v=3
#calculate positions and plot
df=createTrajectory(3000000, 0, 0, a, b, c)
ggplot(df, aes(x, y)) + geom_point(color="#1E1E1E", shape=46, alpha=.05) + opt
ggplot(df, aes(x, y)) + geom_point(color="#1E1E1E", shape=46, alpha=.05) + opt
library(bibliometrix)
biblioshiny()
install.packages(c("ggforce", "ggplot2", "ggsignif", "markdown", "quantreg", "xml2"))
library(GUImorph, lib.loc = "C:/Program Files/R/R-3.6.1/library")
install.packages("Morpho")
detach("package:GUImorph", unload = TRUE)
library(GUImorph, lib.loc = "C:/Program Files/R/R-3.6.1/library")
install.packages("tcltk2")
library(GUImorph, lib.loc = "C:/Program Files/R/R-3.6.1/library")
GUImorph()
detach("package:GUImorph", unload = TRUE)
great.friends <- c("Christian", "Kaylea", "Cory", "Emma", "Bethan")
call(great.friends)
great.friends
knit_with_parameters('C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/Articles/Illustration Error - In Prep/submission/finalised_submission/Hoggard_et_al_2019.Rmd')
dataset <- "https://github.com/CSHoggard/-Morph2019/practical_two.csv""
dataset <- "https://github.com/CSHoggard/-Morph2019/practical_two.csv"
dataset <-  read.csv(dataset, header = T)
library(GUImorph, lib.loc = "C:/Program Files/R/R-3.6.1/library")
install.packages("Rphylip")
R.Version()
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
install.packages("ggsci")
library(ggsci)
scale_color_uchicago()
plot(scale_color_uchicago())
scale_color_uchicago()
p1 = ggplot(subset(diamonds, carat >= 2.2),
aes(x = table, y = price, colour = cut)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", alpha = 0.1, size = 1, span = 1) +
theme_bw()
library(ggplot2)
p1 = ggplot(subset(diamonds, carat >= 2.2),
aes(x = table, y = price, colour = cut)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", alpha = 0.1, size = 1, span = 1) +
theme_bw()
p1 + scale_color_uchicago()
scale_color_uchicago()
scale_color_uchicago
d <- scale_color_uchicago
d <- scale_color_uchicago()
d <- scale_color_uchicago
# install.packages("devtools")
devtools::install_github("ropenscilabs/vitae")
install.packages('tinytex')
install.packages("devtools")
devtools::install_github("ropenscilabs/vitae")
install.packages('tinytex')
tinytex::install_tinytex()
tinytex::tinytex_root()
tinytex::tinytex_root()
library(tinytex)
library(vitae)
remove.packages("vitae", lib="~/R/win-library/3.6")
install.packages("vitae")
library(vitae)
---
---
name: Rob J Hyndman
address: "Department of Econometrics & Business Statistics,\\tabularnewline Monash University, VIC 3800, Australia."
www: robjhyndman.com
phone: +61 3 9905 5141
email: "Rob.Hyndman@monash.edu"
twitter: robjhyndman
github: robjhyndman
date: "`r format(Sys.time(), '%B %Y')`"
headcolor: "000088"
output:
vitae::hyndman:
keep_tex: yes
header_includes:
- \ExecuteBibliographyOptions{useprefix=true}
- renewcommand{\bibfont}{\normalfont\fontsize{10}{12.4}\sffamily}
---
install.packages("digest")
install.packages("digest")
install.packages("digest")
install.packages("digest")
unlink('C:/Users/cshog/Desktop/test_cache', recursive = TRUE)
knit_with_parameters('C:/Users/cshog/Desktop/test.Rmd')
install.packages("digest")
install.packages("scholar")
remove.packages("yaml", lib="~/R/win-library/3.6")
install.packages("yaml")
unlink('C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/R_Projects/cv_csh/cv_csh/cv_csh_cache', recursive = TRUE)
install.packages(c("digest", "rlang"))
library(vitae)
install.packages("digest")
install.packages("digest")
install.packages("digest")
install.packages("digest")
unlink('Untitled/Untitled_cache', recursive = TRUE)
options(tinytex.verbose = TRUE)
install.packages("latexpdf")
library(latexpdf)
detach("package:latexpdf", unload = TRUE)
library(tinytex)
tinytex::install_tinytex()
unlink('C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/R_Projects/cv_csh/cv_csh/cv_csh/cv_csh_cache', recursive = TRUE)
detach("package:tinytex", unload = TRUE)
library(tinytex)
library(tinytex)
tinytex::tlmgr_install("ly1")
unlink('C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/R_Projects/cv_csh/cv_csh/cv_csh/cv_csh_cache', recursive = TRUE)
---
name: Christian Steven
surname: Hoggard
position: "Visiting Fellow"
address: "Department of Archaeology and Anthropology, University of Southampton"
phone: +44 7913 352688
www: sites.google.com/site/christianhoggard
email: "C.Hoggard@soton.ac.uk"
twitter: CSHoggard
github: CSHoggard
date: "`r format(Sys.time(), '%B %Y')`"
output:
vitae::latexcv:
theme: "modern"
---
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("Momocs")) install.packages('geomorph', repos='http://cran.us.r-project.org')
if(!require("ggtree")) install.packages('ggtree', repos='http://cran.us.r-project.org')
if(!require("ape")) install.packages('ape', repos='http://cran.us.r-project.org')
if(!require("Rphylip")) install.packages('Rphylip', repos='http://cran.us.r-project.org')
if(!require("tidytree")) install.packages('tidytree', repos='http://cran.us.r-project.org')
if(!require("phytools")) install.packages('phytools', repos='http://cran.us.r-project.org')
if(!require("kohonen")) install.packages('kohonen', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
backedpoints <- import_tps("TPS_BP_27_09_2019.tps", curves = TRUE) ### import .tps file
load("C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/GitHub/-Bornholm_Study/-Bornholm_Study.Rproj")
install.packages("countdown")
install.packages("xaringan")
install.packages("countdown")
if(!require("Momocs")) install.packages('Momocs', repos='http://cran.us.r-project.org')
if(!require("tidyverse")) install.packages('tidyverse', repos='http://cran.us.r-project.org')
if(!require("cowplot")) install.packages('cowplot', repos='http://cran.us.r-project.org')
install.packages(c("BH", "bibtex", "bookdown", "broom", "callr", "car", "cli", "data.table", "DBI", "directlabels", "dplyr", "DT", "FactoMineR", "fansi", "farver", "geomorph", "gh", "hms", "jsonlite", "knitr", "latticeExtra", "leaps", "loo", "lpSolve", "lwgeom", "magick", "mime", "mnormt", "multcomp", "mvMORPH", "mvtnorm", "openxlsx", "pillar", "plyr", "pracma", "prettyunits", "psych", "quantreg", "R.utils", "raster", "RcppArmadillo", "rlang", "rmarkdown", "RRPP", "sf", "shinycssloaders", "sna", "spam", "SparseM", "stringi", "tidyr", "tidyselect", "tidytree", "tinytex", "tmap", "vctrs", "vitae", "xaringan", "xfun", "XML", "yaml", "zoo"))
install.packages("dplyr")
library(tidyverse)
library(ape)
library(Rphylip)
library(phangorn)
library(cowplot)
library(dendextend)
library(BiocManager)
library(ggtree)
dataset       <- read.csv("dataset_one.csv", header = TRUE, row.names = 1)
require(devtools)
install_github("cornelmpop/Lithics3D", dependencies=T, build_vignettes=T)
require(devtools)
install_github("cornelmpop/Lithics3D", dependencies=T, build_vignettes=T)
install.packages(c("audio", "bookdown", "broom", "callr", "car", "cli", "covr", "crosstalk", "dendextend", "devtools", "dplyr", "FactoMineR", "forcats", "fs", "ggnetwork", "ggpubr", "ggraph", "ggrepel", "glue", "graphlayouts", "Hmisc", "igraph", "lifecycle", "manipulateWidget", "matrixStats", "modelr", "mvtnorm", "nloptr", "pbkrtest", "phytools", "plyr", "ps", "R.methodsS3", "Rcpp", "remotes", "rgexf", "rlang", "roxygen2", "rstan", "rvcheck", "servr", "shiny", "sp", "StanHeaders", "stringi", "subplex", "survival", "testthat", "tidytree", "tinytex", "units", "vctrs", "xaringan", "xml2"))
install.packages(c("audio", "bookdown", "broom", "callr", "car", "cli", "covr", "crosstalk", "dendextend", "devtools", "dplyr", "FactoMineR", "forcats", "fs", "ggnetwork", "ggpubr", "ggraph", "ggrepel", "glue", "graphlayouts", "Hmisc", "igraph", "lifecycle", "manipulateWidget", "matrixStats", "modelr", "mvtnorm", "nloptr", "pbkrtest", "phytools", "plyr", "ps", "R.methodsS3", "Rcpp", "remotes", "rgexf", "rlang", "roxygen2", "rstan", "rvcheck", "servr", "shiny", "sp", "StanHeaders", "stringi", "subplex", "survival", "testthat", "tidytree", "tinytex", "units", "vctrs", "xaringan", "xml2"))
install.packages(c("audio", "bookdown", "broom", "callr", "car", "cli", "covr", "crosstalk", "dendextend", "devtools", "dplyr", "FactoMineR", "forcats", "fs", "ggnetwork", "ggpubr", "ggraph", "ggrepel", "glue", "graphlayouts", "Hmisc", "igraph", "lifecycle", "manipulateWidget", "matrixStats", "modelr", "mvtnorm", "nloptr", "pbkrtest", "phytools", "plyr", "ps", "R.methodsS3", "Rcpp", "remotes", "rgexf", "rlang", "roxygen2", "rstan", "rvcheck", "servr", "shiny", "sp", "StanHeaders", "stringi", "subplex", "survival", "testthat", "tidytree", "tinytex", "units", "vctrs", "xaringan", "xml2"))
install.packages(c("audio", "bookdown", "broom", "callr", "car", "cli", "covr", "crosstalk", "dendextend", "devtools", "dplyr", "FactoMineR", "forcats", "fs", "ggnetwork", "ggpubr", "ggraph", "ggrepel", "glue", "graphlayouts", "Hmisc", "igraph", "lifecycle", "manipulateWidget", "matrixStats", "modelr", "mvtnorm", "nloptr", "pbkrtest", "phytools", "plyr", "ps", "R.methodsS3", "Rcpp", "remotes", "rgexf", "rlang", "roxygen2", "rstan", "rvcheck", "servr", "shiny", "sp", "StanHeaders", "stringi", "subplex", "survival", "testthat", "tidytree", "tinytex", "units", "vctrs", "xaringan", "xml2"))
install.packages(c("audio", "bookdown", "broom", "callr", "car", "cli", "covr", "crosstalk", "dendextend", "devtools", "dplyr", "FactoMineR", "forcats", "fs", "ggnetwork", "ggpubr", "ggraph", "ggrepel", "glue", "graphlayouts", "Hmisc", "igraph", "lifecycle", "manipulateWidget", "matrixStats", "modelr", "mvtnorm", "nloptr", "pbkrtest", "phytools", "plyr", "ps", "R.methodsS3", "Rcpp", "remotes", "rgexf", "rlang", "roxygen2", "rstan", "rvcheck", "servr", "shiny", "sp", "StanHeaders", "stringi", "subplex", "survival", "testthat", "tidytree", "tinytex", "units", "vctrs", "xaringan", "xml2"))
require(devtools)
install_github("cornelmpop/Lithics3D", dependencies=T, build_vignettes=T)
require(devtools)
install_github("cornelmpop/Lithics3D", dependencies=T, build_vignettes=T)
require(devtools)
install_github("cornelmpop/Lithics3D", dependencies=T, build_vignettes=T)
setwd("C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/Github/-Lithic_Illustrations")
library(psych) ### load the listed package
library(geomorph) ### load the listed package
library(tidyverse) ### load the listed package
library(vegan) ### load the listed package
library(MASS) ### load the listed package
library(cowplot) ### load the listed package
library(ggpubr) ### load the listed package
landmarks_elongated   <- readland.tps("elongated.tps", readcurves = TRUE) ### landmark data for all elongated examples (safe to ignore rescaling issues)
landmarks_tanged      <- readland.tps("tanged.tps", readcurves = TRUE)    ### landmark data for all tanged examples (safe to ignore rescaling issues)
landmarks_handaxe     <- readland.tps("handaxe.tps", readcurves = TRUE)   ### landmark data for all handaxe examples (safe to ignore rescaling issues)
shape_data_elongated  <- read.csv("elongated.csv", header = TRUE, row.names = 1) ### classificatory data (elongated examples)
shape_data_elongated$Artefact <- as.factor(shape_data_elongated$Artefact)
shape_data_tanged     <- read.csv("tanged.csv", header = TRUE, row.names = 1) ### classificatory data (tanged examples)
shape_data_tanged$Artefact    <- as.factor(shape_data_tanged$Artefact)
shape_data_handaxe    <- read.csv("handaxe.csv", header = TRUE, row.names = 1) ### classificatory data (handaxe examples)
shape_data_handaxe$Artefact   <- as.factor(shape_data_handaxe$Artefact)
shape_data_sliders    <- read.csv("curveslide.csv", header = TRUE) ### slider file (prepared using geomorph)
metric_data <- read.csv("measurement_data.csv", header = TRUE, row.names = 1) ### metric and classificatory data for all examples
metric_data$Artefact <- as.factor(metric_data$Artefact)
digitisation_error_landmarks  <- readland.tps("digitisation_error.tps", readcurves = TRUE) ### landmark data for a random example (five replicates)
digitisation_error_landmarks_data <- read.csv("digitisation_error.csv", header = TRUE, row.names = 1) ### classification: illustration error
digitisation_error_metrics  <- read.csv("measurement_error.csv", header = TRUE, row.names = 1) ### metric data for a random example (five replicates)
digitisation_error_metrics$Attempt <- as.factor(digitisation_error_metrics$Attempt)
gpa_elongated <- gpagen(landmarks_elongated, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: elongated examples (procrustes distance criterion)
gpa_elongated$coords ### procrustes coordinates (elongated examples)
plot(gpa_elongated) ### plot: procrustes coordinates (elongated examples)
gpa_tanged    <- gpagen(landmarks_tanged, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: tanged examples (procrustes distance criterion)
gpa_tanged$coords ### procrustes coordinates (tanged examples)
plot(gpa_tanged) ### plot: procrustes coordinates (tanged examples)
gpa_handaxe   <- gpagen(landmarks_handaxe, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: handaxe examples (procrustes distance criterion)
gpa_handaxe$coords ### procrustes coordinates (handaxe examples)
plot(gpa_handaxe) ### plot: procrustes coordinates (handaxe examples)
pca_elongated <- plotTangentSpace(gpa_elongated$coords, cex = 2, warpgrids = FALSE, groups = shape_data_tanged$Artefact, verbose = TRUE) ### pca for procrustes coordinates (elongated examples: geomorph layout)
pca_elongated$pc.summary
elongated_ds <- cbind(shape_data_elongated, pca_elongated$pc.scores) ### ggplot compatibility
pca_tanged <- plotTangentSpace(gpa_tanged$coords, warpgrids = FALSE, groups = shape_data_tanged$Artefact, verbose = TRUE) ### pca for procrustes coordinates (tanged examples: geomorph layout)
pca_tanged$pc.summary
tanged_ds <- cbind(shape_data_tanged, pca_tanged$pc.scores) ### ggplot compatibility
pca_handaxe <- plotTangentSpace(gpa_handaxe$coords, warpgrids = FALSE, groups = shape_data_handaxe$Artefact, verbose = TRUE) ### pca for procrustes coordinates (handaxe examples: geomorph layout)
pca_handaxe$pc.summary
handaxe_ds <- cbind(shape_data_handaxe, pca_handaxe$pc.scores) ### ggplot compatibility
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 2) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal()
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 2) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal()
figure_6 <- ggplot(data = tanged_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 2) + labs(x = "Principal Component 1 (50.805%)", y = "Principal Component 2 (33.926%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal()
figure_7 <- ggplot(data = handaxe_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 2) + labs(x = "Principal Component 1 (84.840%)", y = "Principal Component 2 (6.987%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal()
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 70, width = 100)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal()
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 70, width = 100)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=20)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=20))
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 70, width = 100)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=10))
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 70, width = 100)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 70, width = 100)
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 90, width = 120)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
figure_6 <- ggplot(data = tanged_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 2) + labs(x = "Principal Component 1 (50.805%)", y = "Principal Component 2 (33.926%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
figure_7 <- ggplot(data = handaxe_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 2) + labs(x = "Principal Component 1 (84.840%)", y = "Principal Component 2 (6.987%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 90, width = 120)
ggsave("Fig6.tiff", plot = figure_6, dpi = 400, units = "mm", height = 90, width = 120)
ggsave("Fig7.tiff", plot = figure_7, dpi = 400, units = "mm", height = 90, width = 120)
figure_5 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
figure_6 <- ggplot(data = tanged_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (50.805%)", y = "Principal Component 2 (33.926%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
figure_7 <- ggplot(data = handaxe_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (84.840%)", y = "Principal Component 2 (6.987%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
ggsave("Fig5.tiff", plot = figure_5, dpi = 300, units = "mm", height = 90, width = 120)
ggsave("Fig6.tiff", plot = figure_6, dpi = 400, units = "mm", height = 90, width = 120)
ggsave("Fig7.tiff", plot = figure_7, dpi = 400, units = "mm", height = 90, width = 120)
elongated1 <- gpa_elongated$coords[, , 1:18] ### procrustes coordinates: first 18 examples (artefact 1)
df_elongated1 <- geomorph.data.frame(shape = elongated1, class = shape_data_elongated$Class[1:18], artefact = shape_data_elongated$Artefact[1:18]) ### data frame creation
df_elongated1 ### summary: data frame
E1 <- procD.lm(shape ~ class, data = df_elongated1) ### procrustes anova: shape vs. class (artefact 1)
summary(E1) ### anova summary
elongated1pcs <- as.data.frame(pca_elongated$pc.scores[1:18, 1:10]) ### 95% cumulative shape variance
elongated1class <- shape_data_elongated$Class[1:18]
elongated1pcs <- cbind(elongated1pcs, elongated1class)
elongated1pcs <- rename(elongated1pcs, Class = elongated1class)
elongated1lda <- lda(Class ~ ., data = elongated1pcs)
elongated1ldapredict <- predict(elongated1lda)
elongated1ldaplot <- cbind(elongated1ldapredict$x[, 1:3], elongated1pcs)
elongated1ldaplotggplot <- ggplot(elongated1ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(),  axis.title.y = element_text(size = 6), legend.position = "none",  axis.title.x = element_text(size = 6))
elongated2 <- gpa_elongated$coords[, , 19:36] ### procrustes coordinates: second 18 examples (artefact 2)
df_elongated2 <- geomorph.data.frame(shape = elongated2, class = shape_data_elongated$Class[19:36], artefact = shape_data_elongated$Artefact[19:36]) ### data frame creation
df_elongated2 ### summary: data frame
E2 <- procD.lm(shape ~ class, data = df_elongated2) ### procrustes anova: shape vs. class (artefact 2)
summary(E2) ### anova summary
elongated2pcs <- as.data.frame(pca_elongated$pc.scores[19:36, 1:10]) ### 95% cumulative shape variance
elongated2class <- shape_data_elongated$Class[19:36]
elongated2pcs <- cbind(elongated2pcs, elongated2class)
elongated2pcs <- rename(elongated2pcs, Class = elongated2class)
elongated2lda <- lda(Class ~ ., elongated2pcs)
elongated2ldapredict <- predict(elongated2lda)
elongated2ldaplot <- cbind(elongated2ldapredict$x[, 1:3], elongated2pcs)
elongated2ldaplotggplot <- ggplot(elongated2ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
elongated3 <- gpa_elongated$coords[, , 37:54] ### procrustes coordinates: third 18 examples (artefact 3)
df_elongated3 <- geomorph.data.frame(shape = elongated3, class = shape_data_elongated$Class[37:54], artefact = shape_data_elongated$Artefact[37:54]) ### data frame creation
df_elongated3 ### summary: data frame
E3 <- procD.lm(shape ~ class, data = df_elongated3) ### procrustes anova: shape vs. class (artefact 3)
summary(E3) ### anova summary
elongated3pcs <- as.data.frame(pca_elongated$pc.scores[37:54, 1:10]) ### 95% cumulative shape variance
elongated3class <- shape_data_elongated$Class[37:54]
elongated3pcs <- cbind(elongated3pcs, elongated3class)
elongated3pcs <- rename(elongated3pcs, Class = elongated3class)
elongated3lda <- lda(Class ~ ., elongated3pcs)
elongated3ldapredict <- predict(elongated3lda)
elongated3ldaplot <- cbind(elongated3ldapredict$x[, 1:3], elongated3pcs)
elongated3ldaplotggplot <- ggplot(elongated3ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
elongated4 <- gpa_elongated$coords[, , 55:72] ### procrustes coordinates: forth 18th examples (artefact 4)
df_elongated4 <- geomorph.data.frame(shape = elongated4, class = shape_data_elongated$Class[55:72], artefact = shape_data_elongated$Artefact[55:72]) ### data frame creation
df_elongated4 ### summary: data frame
E4 <- procD.lm(shape ~ class, data = df_elongated4) ### procrustes anova: shape vs. class (artefact 4)
summary(E4) ### anova summary
elongated4pcs <- as.data.frame(pca_elongated$pc.scores[55:72, 1:10]) ### 95% cumulative shape variance
elongated4class <- shape_data_elongated$Class[55:72]
elongated4pcs <- cbind(elongated4pcs, elongated4class)
elongated4pcs <- rename(elongated4pcs, Class = elongated4class)
elongated4lda <- lda(Class ~ ., elongated4pcs)
elongated4ldapredict <- predict(elongated4lda)
elongated4ldaplot <- cbind(elongated4ldapredict$x[, 1:3], elongated4pcs)
elongated4ldaplotggplot <- ggplot(elongated4ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
elongated5 <- gpa_elongated$coords[, , 73:90] ### procrustes coordinates: fifth 18th examples (artefact 5)
df_elongated5 <- geomorph.data.frame(shape = elongated5, class = shape_data_elongated$Class[73:90], artefact = shape_data_elongated$Artefact[73:90]) ### data frame creation
df_elongated5 ### summary: data frame
E5 <- procD.lm(shape ~ class, data = df_elongated5) ### procrustes anova: shape vs. class (artefact 5)
summary(E5) ### anova summmary
elongated5pcs <- as.data.frame(pca_elongated$pc.scores[73:90, 1:10]) ### 95% cumulative shape variance
elongated5class <- shape_data_elongated$Class[73:90]
elongated5pcs <- cbind(elongated5pcs, elongated5class)
elongated5pcs <- rename(elongated5pcs, Class = elongated5class)
elongated5lda <- lda(Class ~ ., elongated5pcs)
elongated5ldapredict <- predict(elongated5lda)
elongated5ldaplot <- cbind(elongated5ldapredict$x[, 1:3], elongated5pcs)
elongated5ldaplotggplot <- ggplot(elongated5ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
tanged1 <- gpa_tanged$coords[, , 1:18] ### procrustes coordinates: first 18 examples (artefact 1)
df_tanged1 <- geomorph.data.frame(shape = tanged1, class = shape_data_tanged$Class[1:18], artefact = shape_data_tanged$Artefact[1:18]) ### data frame creation
df_tanged1 ### summary: data frame
T1 <- procD.lm(shape ~ class, data = df_tanged1) ### procrustes anova: shape vs. class (artefact 1)
summary(T1) ### anova summary
tanged1pcs <- as.data.frame(pca_tanged$pc.scores[1:18, 1:10]) ### 95% cumulative shape variance 95%
tanged1class <- shape_data_tanged$Class[1:18]
tanged1pcs <- cbind(tanged1pcs, tanged1class)
tanged1pcs <- rename(tanged1pcs, Class = tanged1class)
tanged1lda <- lda(Class ~ ., tanged1pcs)
tanged1ldapredict <- predict(tanged1lda)
tanged1ldaplot <- cbind(tanged1ldapredict$x[, 1:3], tanged1pcs)
tanged1ldaplotggplot <- ggplot(tanged1ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
tanged2 <- gpa_tanged$coords[, , 19:36] ### procrustes coordinates: second 18 examples (artefact 2)
df_tanged2 <- geomorph.data.frame(shape = tanged2, class = shape_data_tanged$Class[19:36], artefact = shape_data_tanged$Artefact[19:36]) ### data frame creation
df_tanged2 ### summary: data frame
T2 <- procD.lm(shape ~ class, data = df_tanged2) ### procrustes anova: shape vs. class (artefact 2)
summary(T2) ### anova summary
tanged2pcs <- as.data.frame(pca_tanged$pc.scores[19:36, 1:10]) ### 95% cumulative shape variance
tanged2class <- shape_data_tanged$Class[19:36]
tanged2pcs <- cbind(tanged2pcs, tanged2class)
tanged2pcs <- rename(tanged2pcs, Class = tanged2class)
tanged2lda <- lda(Class ~ ., tanged2pcs)
tanged2ldapredict <- predict(tanged2lda)
tanged2ldaplot <- cbind(tanged2ldapredict$x[, 1:3], tanged2pcs)
tanged2ldaplotggplot <- ggplot(tanged2ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
tanged3 <- gpa_tanged$coords[, , 37:54] ### procrustes coordinates: third 18 examples (artefact 3)
df_tanged3 <- geomorph.data.frame(shape = tanged3, class = shape_data_tanged$Class[37:54], artefact = shape_data_tanged$Artefact[37:54]) ### data frame creation
df_tanged3 ### summary: data frame
T3 <- procD.lm(shape ~ class, data = df_tanged3) ### procrustes anova: shape vs. class (artefact 3)
summary(T3) ### anova summary
tanged3pcs <- as.data.frame(pca_tanged$pc.scores[37:54, 1:10]) ### 95% cumulative shape variance
tanged3class <- shape_data_tanged$Class[37:54]
tanged3pcs <- cbind(tanged3pcs, tanged3class)
tanged3pcs <- rename(tanged3pcs, Class = tanged3class)
tanged3lda <- lda(Class ~ ., tanged3pcs)
tanged3ldapredict <- predict(tanged3lda)
tanged3ldaplot <- cbind(tanged3ldapredict$x[, 1:3], tanged3pcs)
tanged3ldaplotggplot <- ggplot(tanged3ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
tanged4 <- gpa_tanged$coords[, , 55:72] ### procrustes coordinates: fourth 18 examples (artefact 4)
df_tanged4 <- geomorph.data.frame(shape = tanged4, class = shape_data_tanged$Class[55:72], artefact = shape_data_tanged$Artefact[55:72]) ### data frame creation
df_tanged4 ### summary: data frame
T4 <- procD.lm(shape ~ class, data = df_tanged4) ### procrustes anova: shape vs. class (artefact 4)
summary(T4) ### anova summary
tanged4pcs <- as.data.frame(pca_tanged$pc.scores[55:72, 1:10]) ### 95% cumulative shape variance
tanged4class <- shape_data_tanged$Class[55:72]
tanged4pcs <- cbind(tanged4pcs, tanged4class)
tanged4pcs <- rename(tanged4pcs, Class = tanged4class)
tanged4lda <- lda(Class ~ ., tanged4pcs)
tanged4ldapredict <- predict(tanged4lda)
tanged4ldaplot <- cbind(tanged4ldapredict$x[, 1:3], tanged4pcs)
tanged4ldaplotggplot <- ggplot(tanged4ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
tanged5 <- gpa_tanged$coords[, , 73:90] ### procrustes coordinates: fifth 18 (artefact 5)
df_tanged5 <- geomorph.data.frame(shape = tanged5, class = shape_data_tanged$Class[73:90], artefact = shape_data_tanged$Artefact[73:90]) ### data frame creation
df_tanged5 ### summary: data frame!
T5 <- procD.lm(shape ~ class, data = df_tanged5) ### procrustes anova: shape vs. class (artefact 5)
summary(T5) ### anova summary
tanged5pcs <- as.data.frame(pca_tanged$pc.scores[73:90, 1:10]) ### 95% cumulative shape variance
tanged5class <- shape_data_tanged$Class[73:90]
tanged5pcs <- cbind(tanged5pcs, tanged5class)
tanged5pcs <- rename(tanged5pcs, Class = tanged5class)
tanged5lda <- lda(Class ~ ., tanged5pcs)
tanged5ldapredict <- predict(tanged5lda)
tanged5ldaplot <- cbind(tanged5ldapredict$x[, 1:3], tanged5pcs)
tanged5ldaplotggplot <- ggplot(tanged5ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
handaxe1 <- gpa_handaxe$coords[, , 1:18] ### procrustes coordinates: first 18 (artefact 1)
df_handaxe1 <- geomorph.data.frame(shape = handaxe1, class = shape_data_handaxe$Class[1:18], artefact = shape_data_handaxe$Artefact[1:18]) ### data frame creation
df_handaxe1 ### summary: data frame
H1 <- procD.lm(shape ~ class, data = df_handaxe1) ### procrustes anova: shape vs. class (artefact 1)
summary(H1) ### anova summary
handaxe1pcs <- as.data.frame(pca_handaxe$pc.scores[1:18, 1:10]) ### 95% cumulative shape variance
handaxe1class <- shape_data_handaxe$Class[1:18]
handaxe1pcs <- cbind(handaxe1pcs, handaxe1class)
handaxe1pcs <- rename(handaxe1pcs, Class = handaxe1class)
handaxe1lda <- lda(Class ~ ., handaxe1pcs)
handaxe1ldapredict <- predict(handaxe1lda)
handaxe1ldaplot <- cbind(handaxe1ldapredict$x[, 1:3], handaxe1pcs)
handaxe1ldaplotggplot <- ggplot(handaxe1ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
handaxe2 <- gpa_handaxe$coords[, , 19:36] ### procrustes coordinates: second 18 (artefact 2)
df_handaxe2 <- geomorph.data.frame(shape = handaxe2, class = shape_data_handaxe$Class[19:36], artefact = shape_data_handaxe$Artefact[19:36]) ### data frame creation
df_handaxe2 ### summary: data frame
H2 <- procD.lm(shape ~ class, data = df_handaxe2) ### procrustes anova: shape vs. class (artefact 2)
summary(H2) ### anova summary
handaxe2pcs <- as.data.frame(pca_handaxe$pc.scores[19:36, 1:10]) ### 95% cumulative shape variance
handaxe2class <- shape_data_handaxe$Class[19:36]
handaxe2pcs <- cbind(handaxe2pcs, handaxe2class)
handaxe2pcs <- rename(handaxe2pcs, Class = handaxe2class)
handaxe2lda <- lda(Class ~ ., handaxe2pcs)
handaxe2ldapredict <- predict(handaxe2lda)
handaxe2ldaplot <- cbind(handaxe2ldapredict$x[, 1:3], handaxe2pcs)
handaxe2ldaplotggplot <- ggplot(handaxe2ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
handaxe3 <- gpa_handaxe$coords[, , 37:54] ### procrustes coordinates: third 18 (artefact 3)
df_handaxe3 <- geomorph.data.frame(shape = handaxe3, class = shape_data_handaxe$Class[37:54], artefact = shape_data_handaxe$Artefact[37:54]) ### data frame creation
df_handaxe3 ### summary: data frame
H3 <- procD.lm(shape ~ class, data = df_handaxe3) ### procrustes anova: shape vs. class (artefact 3)
summary(H3) ### anova summary
handaxe3pcs <- as.data.frame(pca_handaxe$pc.scores[37:54, 1:10]) ### 95% cumulative shape variance
handaxe3class <- shape_data_handaxe$Class[37:54]
handaxe3pcs <- cbind(handaxe3pcs, handaxe3class)
handaxe3pcs <- rename(handaxe3pcs, Class = handaxe3class)
handaxe3lda <- lda(Class ~ ., handaxe3pcs)
handaxe3ldapredict <- predict(handaxe3lda)
handaxe3ldaplot <- cbind(handaxe3ldapredict$x[, 1:3], handaxe3pcs)
handaxe3ldaplotggplot <- ggplot(handaxe3ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
handaxe4 <- gpa_handaxe$coords[, , 55:72] ### procrustes coordinates: fourth 18 (artefact 4)
df_handaxe4 <- geomorph.data.frame(shape = handaxe4, class = shape_data_handaxe$Class[55:72], artefact = shape_data_handaxe$Artefact[55:72]) ### data frame creation
df_handaxe4 ### summary: data frame
H4 <- procD.lm(shape ~ class, data = df_handaxe4) ### procrustes anova: shape vs. class (artefact 4)
summary(H4) ### anova summary
handaxe4pcs <- as.data.frame(pca_handaxe$pc.scores[55:72, 1:10]) ### 95% cumulative shape variance
handaxe4class <- shape_data_handaxe$Class[55:72]
handaxe4pcs <- cbind(handaxe4pcs, handaxe4class)
handaxe4pcs <- rename(handaxe4pcs, Class = handaxe4class)
handaxe4lda <- lda(Class ~ ., handaxe4pcs)
handaxe4ldapredict <- predict(handaxe4lda)
handaxe4ldaplot <- cbind(handaxe4ldapredict$x[, 1:3], handaxe4pcs)
handaxe4ldaplotggplot <- ggplot(handaxe4ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
handaxe5 <- gpa_handaxe$coords[, , 73:90] ### procrustes coordinates: fifth 18 (artefact 5)
df_handaxe5 <- geomorph.data.frame(shape = handaxe5, class = shape_data_handaxe$Class[73:90], artefact = shape_data_handaxe$Artefact[73:90]) ### data frame creation
df_handaxe5 ### summary: data frame
H5 <- procD.lm(shape ~ class, data = df_handaxe5) ### procrustes anova: shape vs. class (artefact 5)
summary(H5) ### anova summary
handaxe5pcs <- as.data.frame(pca_handaxe$pc.scores[73:90, 1:10]) ### 95% cumulative shape variance
handaxe5class <- shape_data_handaxe$Class[73:90]
handaxe5pcs <- cbind(handaxe5pcs, handaxe5class)
handaxe5pcs <- rename(handaxe5pcs, Class = handaxe5class)
handaxe5lda <- lda(Class ~ ., handaxe5pcs)
handaxe5ldapredict <- predict(handaxe5lda)
handaxe5ldaplot <- cbind(handaxe5ldapredict$x[, 1:3], handaxe5pcs)
handaxe5ldaplotggplot <- ggplot(handaxe5ldaplot, aes(LD1, LD2)) + geom_point(aes(shape = Class), size = 2) + labs(x = "LDA 1", y = "LDA 2") + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none",  axis.title.y = element_text(size = 6),  axis.title.x = element_text(size = 6))
plot_grid(elongated1ldaplotggplot, elongated2ldaplotggplot, elongated3ldaplotggplot, elongated4ldaplotggplot, elongated5ldaplotggplot, tanged1ldaplotggplot, tanged2ldaplotggplot, tanged3ldaplotggplot, tanged4ldaplotggplot, tanged5ldaplotggplot, handaxe1ldaplotggplot, handaxe2ldaplotggplot, handaxe3ldaplotggplot, handaxe4ldaplotggplot, handaxe5ldaplotggplot, ncol = 5, align = 'v') #synthesis of the four figures
figure_8a <- ggplot(metric_data_elongated, aes(Length_mm, Width_mm, colour = Artefact, shape = Class)) + geom_point() + facet_grid(cols = vars(Artefact), scales = "free", labeller=label_both) + labs(x = "Length (mm)", y = "Width (mm)") + theme_minimal() + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none")
metric_data_elongated <- metric_data[which(metric_data$Type=="Elongated"),]
metric_data_handaxe   <- metric_data[which(metric_data$Type=="Handaxe"),]
metric_data_tanged    <- metric_data[which(metric_data$Type=="Tanged"),]
figure_8a <- ggplot(metric_data_elongated, aes(Length_mm, Width_mm, colour = Artefact, shape = Class)) + geom_point() + facet_grid(cols = vars(Artefact), scales = "free", labeller=label_both) + labs(x = "Length (mm)", y = "Width (mm)") + theme_minimal() + scale_shape_manual(values=c(17,15,3,16)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none")
figure_8b <- ggplot(metric_data_tanged, aes(Length_mm, Width_mm, colour = Artefact, shape = Class)) + geom_point() + facet_grid(cols = vars(Artefact), scales = "free", labeller=label_both) + labs(x = "Length (mm)", y = "Width (mm)") +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none")
figure_8c <- ggplot(metric_data_handaxe, aes(Length_mm, Width_mm, colour = Artefact, shape = Class)) + geom_point() + facet_grid(cols = vars(Artefact), scales = "free", labeller=label_both) + labs(x = "Length (mm)", y = "Width (mm)") +  scale_shape_manual(values=c(17,15,3,16)) +  theme_minimal() + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), legend.position = "none")
figure_8 <- plot_grid(figure_8a, figure_8b, figure_8c, labels= "AUTO", ncol = 1, align = 'v') ### synthesis of the four figures
plot(figure_8)
ggsave("Fig8.tiff", plot = last_plot(), dpi = 300, units = "mm", height = 150, width = 100)
