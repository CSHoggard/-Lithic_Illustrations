lims(x = c(13,100), y = c(0,140)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 56.5, y = 130, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 125, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 120, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 115, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 110, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "Test",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(10, 0, 10, 0))) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,100), y = c(0,140)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 56.5, y = 130, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 125, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 120, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 115, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = 110, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "Test",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(10, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,100), y = c(-60,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 56.5, y = -50, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = -30, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = -40, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = -10, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 56.5, y = -20, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "Test",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(10, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 125, y = 50, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 125, y = 30, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 125, y = 40, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 125, y = 10, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 125, y = 20, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "Test",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(10, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 130, y = 50, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 130, y = 40, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 130, y = 45, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 130, y = 30, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 130, y = 35, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "Test",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(10, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 135, y = 60, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 50, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 55, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 40, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 45, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "Test",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(10, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 135, y = 60, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 50, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 55, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 40, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 45, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "<b>Case Study: The Datasaurus Dozen</b>",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(30, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
library(rcartocolor)
library(tidyverse)
library(extrafont)
library(gganimate)
library(ggtext)
datasaurus <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-13/datasaurus.csv')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 135, y = 60, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 50, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 55, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 40, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 45, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "<b>Case Study: The Datasaurus Dozen</b>",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(30, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 135, y = 60, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 50, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 55, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 40, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 45, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "<b>Case Study: The Datasaurus Dozen</b>",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(30, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
data("iris")
ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species))
ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +
geom_point()
ggplot(iris, aes(Petal.Length, Petal.Width), colour = Species) +
geom_point()
iris %>% ggplot(aes(Petal.Length, Petal.Width), colour = Species) +
geom_point()
?transition_states
iris %>% ggplot(aes(Petal.Length, Petal.Width), colour = Species) +
geom_point()
datasaurus %>%
group_by(dataset) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
sd_x   =   sd(x),
sd_y   =   sd(y),
coefficient  = cor(x, y, method = "pearson")) %>%
left_join(datasaurus) %>%
ggplot(aes(x = x, y = y)) +
lims(x = c(13,150), y = c(0,100)) +
coord_equal(clip = "off") +
geom_point(alpha = 0.6) +
scale_color_manual(values = colours, guide = "none") +
geom_text(aes(x = 135, y = 60, label = paste("correlation", round(coefficient,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 50, label = paste("standard deviation (x):", round(sd_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 55, label = paste("standard deviation (y):", round(sd_y,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 40, label = paste("Mean (x):", round(mean_x,5)), family = "IBM Plex Sans")) +
geom_text(aes(x = 135, y = 45, label = paste("Mean (y):", round(mean_y,5)), family = "IBM Plex Sans")) +
labs(title = "The Importance of Data Visualisation",
subtitle = "<b>Case Study: The Datasaurus Dozen</b>",
caption = "• Produced by @CSHoggard  |   #TidyTuesday Week 42 • \n • Data: Francis Anscombe, Alberto Cairo, Justin Matejka & George Fitzmaurice •") +
theme_minimal() +
theme(plot.title = element_text(family = "IBM Plex Sans",
size = 30,
color = "Orange",
hjust = 0.5,
margin = margin(15, 0, 10, 0)),
plot.subtitle = element_text(family = "IBM Plex Sans",
size = 22,
color = "grey30",
hjust = 0.5,
margin = margin(10, 0, 20, 0)),
plot.caption = element_text(family = "IBM Plex Sans",
size = 10,
colour = "grey30",
hjust = 0.5,
margin = margin(30, 0, 10, 0)),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
transition_states(dataset, 10, 3) +
ease_aes('cubic-in-out')
bodies <- matrix(c(7,19,4,7,2,2,1,3,0,4), cols = 2, byrow = TRUE)
bodies <- matrix(c(7,19,4,7,2,2,1,3,0,4), ncol = 2, byrow = TRUE)
View(bodies)
chisq.test(V1, V2)
chisq.test(bodies$V1, bodies$V2)
as.data.frame(bodies)
dfb <- as.data.frame(bodies)
View(dfb)
chisq.test(dfb$V1, dfb$V2)
setwd("C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/Github/-Lithic_Illustrations")
library(psych) ### load the listed package
library(geomorph) ### load the listed package
library(tidyverse) ### load the listed package
library(vegan) ### load the listed package
library(MASS) ### load the listed package
library(cowplot) ### load the listed package
library(ggpubr) ### load the listed package
library(LaMBDA) ### load the listed package
library(rio) ### load the listed package
landmarks_elongated <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/landmarks_elongated.rds")
landmarks_elongated <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/landmarks_elongated.rds")
landmarks_handaxe <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/landmarks_handaxe.rds")
landmarks_tanged <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/landmarks_tanged.rds")
shape_data_elongated <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/shape_data_elongated.rds")
shape_data_tanged <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/shape_data_tanged.rds")
shape_data_handaxe <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/shape_data_handaxe.rds")
metric_data <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/metric_data.rds")
digitisation_error_landmarks <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/digitisation_error_landmarks.rds")
digitisation_error_landmarks_data <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/digitisation_error_landmarks_data.rds")
digitisation_error_metrics <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/digitisation_error_metrics.rds")
shape_data_sliders <- import("https://github.com/CSHoggard/-Lithic_Illustrations/raw/master/shape_data_sliders.rds")
gpa_digi_error <- gpagen(digitisation_error_landmarks, Proj = TRUE, curves =  shape_data_sliders, ProcD = TRUE, surfaces = NULL) ### generalised procrustes analysis: digitisation error
gpa_digi_error ### gpa details (including mean shape)
plot(gpa_digi_error) ### plots procrustes coordinates
gpa_digi_error_df <- geomorph.data.frame(gpa_digi_error, attempt = digitisation_error_landmarks_data$Attempt)
gpaprocD <- procD.lm(coords ~ attempt, data = gpa_digi_error_df) ### anova (shape vs. individual)
summary(gpaprocD) ### summary (p: 0.9915)
gpaprocD$aov.table$SS[1]/gpaprocD$aov.table$SS[3]*100 ### error as a percentage (8.6%)
head(digitisation_error_metrics)
statsl  <- describe(digitisation_error_metrics$Length_mm) ### descriptive statistics
statsw  <- describe(digitisation_error_metrics$Width_mm) ### descriptive statistics
statssf <- describe(digitisation_error_metrics$Scale_Factor) ### descriptive statistics
(statsl$se/statsl$mean)   * 100 ### fractional uncertainty (length)
(statsw$se/statsw$mean)   * 100 ### fractional uncertainty (width)
(statssf$se/statssf$mean) * 100 ### fractional uncertainty (scale factor)
lasec(two.d.array(landmarks_elongated), 2, iter = 500) # may take some time
lasec(two.d.array(landmarks_tanged), 2, iter = 500) # may take some time
lasec(two.d.array(landmarks_handaxe), 2, iter = 500) # may take some time
gpa_elongated <- gpagen(landmarks_elongated, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: elongated examples (procrustes distance criterion)
gpa_elongated$coords ### procrustes coordinates (elongated examples)
plot(gpa_elongated) ### plot: procrustes coordinates (elongated examples)
gpa_elongated <- gpagen(landmarks_elongated, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: elongated examples (procrustes distance criterion)
gpa_elongated$coords ### procrustes coordinates (elongated examples)
plot(gpa_elongated) ### plot: procrustes coordinates (elongated examples)
gpa_tanged    <- gpagen(landmarks_tanged, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: tanged examples (procrustes distance criterion)
gpa_tanged$coords ### procrustes coordinates (tanged examples)
plot(gpa_tanged) ### plot: procrustes coordinates (tanged examples)
gpa_handaxe   <- gpagen(landmarks_handaxe, Proj = TRUE, ProcD = TRUE, curves = shape_data_sliders, surfaces = NULL) ### gpa: handaxe examples (procrustes distance criterion)
gpa_handaxe$coords ### procrustes coordinates (handaxe examples)
plot(gpa_handaxe) ### plot: procrustes coordinates (handaxe examples)
pca_elongated <- gm.prcomp(gpa_elongated$coords) ### pca (geomorph)
pca_elongated ### pca summary
elongated_ds <- cbind(shape_data_elongated, pca_elongated$x) ### tidyverse compatible format
pca_tanged <- gm.prcomp(gpa_tanged$coords) ### pca (geomorph)
pca_tanged ### pca summary
tanged_ds <- cbind(shape_data_tanged, pca_tanged$x) ### tidyverse compatible format
pca_handaxe <- gm.prcomp(gpa_handaxe$coords) ### pca (geomorph)
pca_handaxe ### pca summary
handaxe_ds <- cbind(shape_data_handaxe, pca_handaxe$x) ### tidyverse compatible format
figure_4 <- ggplot(data = elongated_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (45.816%)", y = "Principal Component 2 (24.298%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
figure_5 <- ggplot(data = tanged_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (50.805%)", y = "Principal Component 2 (33.926%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
figure_6 <- ggplot(data = handaxe_ds) + geom_point(mapping = aes(x = PC1, y = PC2, colour = Artefact, shape = Class), size = 1) + labs(x = "Principal Component 1 (84.840%)", y = "Principal Component 2 (6.987%)", shape = "Method/skill", colour = "Artefact") + scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00")) +  scale_shape_manual(values=c(17,15,3,16)) + theme_minimal() + theme(text = element_text(size=8))
elongated1 <- gpa_elongated$coords[, , 1:18]
df_elongated1 <- geomorph.data.frame(shape = elongated1, class = shape_data_elongated$Class[1:18], artefact = shape_data_elongated$Artefact[1:18])
E1 <- procD.lm(shape ~ class, data = df_elongated1, print.progress = FALSE)
metric_data_elongated <- metric_data[which(metric_data$Type=="Elongated"),]
metric_data_handaxe   <- metric_data[which(metric_data$Type=="Handaxe"),]
metric_data_tanged    <- metric_data[which(metric_data$Type=="Tanged"),]
